security:

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_CLIENT:      ROLE_USER
        ROLE_WAITER:      ROLE_USER
        ROLE_RESTAURANT_MANAGER:  ROLE_USER
        ROLE_AUTHOR:      ROLE_USER

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_SUPER_ADMIN' ] }
        user_provider:
                id: user_provider
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        Admin\MainBundle\Entity\Admin:
            algorithm: sha512
        API\UserBundle\Entity\Clients:
            algorithm: sha512

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        login:
#            pattern:  ^/demo/secured/login$
#            security: false

        secured_area:
            pattern:    ^/admin
            form_login:
                provider: user_provider
                check_path: /admin/login_check
                login_path: login
                default_target_path: /admin
                always_use_default_target_path: false
            logout:
                path:   /admin/logout
                invalidate_session: false
                target: /login
                handlers: [ logout.handler ]
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN, ROLE_USER] }
        - { path: ^/admin/gallery/*/upload, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
